config.$inject=["$routeProvider"];var ahNuts=angular.module("cne",["ngRoute"]);angular.module("cne").controller("landingController",landingController),landingController.$inject=["$scope","$log"];function landingController(o,e){e.info("in the landing controller")}angular.module("cne").controller("locationsController",locationsController),locationsController.$inject=["$scope","$log"];function locationsController(o,e){e.info("in the locations controller")}angular.module("cne").controller("loginController",loginController),loginController.$inject=["$scope","$log"];function loginController(o,e){this.username="",this.password="",this.active={username:!1,password:!1},e.info("in the login controller")}angular.module("cne").controller("createLoginController",createLoginController),createLoginController.$inject=["$scope","$log"];function createLoginController(o,e){e.info("in the login-createLogin controller")}angular.module("cne").controller("forgotPasswordController",forgotPasswordController),forgotPasswordController.$inject=["$scope","$log"];function forgotPasswordController(o,e){e.info("in the login-forgot Password controller")}angular.module("cne").directive("flavorMixerSizeSelector",flavorMixerSizeSelector);function flavorMixerSizeSelector(){e.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/flavor-mixer-size-selector.directive.htm",replace:!0,scope:{},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(o,e,r,l){}r.$inject=["$scope","$log"];function r(o,e){}return o}angular.module("cne").directive("flavorMixer",flavorMixer);function flavorMixer(){e.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/flavor-mixer.directive.htm",replace:!0,scope:{},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(o,e,r,l){}r.$inject=["$scope","$log"];function r(o,e){}return o}angular.module("cne").directive("loginPassword",loginPassword);function loginPassword(){e.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/login-password.directive.htm",replace:!0,scope:{password:"=",active:"="},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(o,e,r,l){}r.$inject=["$scope","$log"];function r(o,e){}return o}angular.module("cne").directive("loginUsername",loginUsername);function loginUsername(){e.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/login-username.directive.htm",replace:!0,scope:{username:"=",active:"="},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(o,e,r,l){}r.$inject=["$scope","$log"];function r(o,e){}return o}angular.module("cne").directive("loginValidation",loginValidation);function loginValidation(){e.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/login-validation.directive.htm",replace:!0,scope:{active:"="},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(o,e,r,l){}r.$inject=["$scope","$log"];function r(o,e){}return o}angular.module("cne").config(config);function config(o){o.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/forgotPassword",{templateUrl:"views/login-forgotPasswordPage.htm",controller:"forgotPasswordController",controllerAs:"vm"}).when("/createLogin",{templateUrl:"views/login-createLoginPage.htm",controller:"createLoginController",controllerAs:"vm"}).when("/find",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/shop",{templateUrl:"views/shoppingPage.htm",controller:"shoppingController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
