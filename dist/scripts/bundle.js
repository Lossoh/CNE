config.$inject=["$routeProvider"];var ahNuts=angular.module("cne",["ngRoute"]);angular.module("cne").controller("landingController",landingController),landingController.$inject=["$scope","$log"];function landingController(e,r){r.info("in the landing controller")}angular.module("cne").controller("loginController",loginController),loginController.$inject=["$scope","$log"];function loginController(e,r){this.username="",this.password="",this.active={username:!1,password:!1},r.info("in the login controller")}angular.module("cne").directive("flavorMixerSizeSelector",flavorMixerSizeSelector);function flavorMixerSizeSelector(){r.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/flavor-mixer-size-selector.directive.htm",replace:!0,scope:{},link:r,controller:o,controllerAs:"vm",bindToController:!0};function r(e,r,o,n){}o.$inject=["$scope","$log"];function o(e,r){}return e}angular.module("cne").directive("flavorMixer",flavorMixer);function flavorMixer(){r.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/flavor-mixer.directive.htm",replace:!0,scope:{},link:r,controller:o,controllerAs:"vm",bindToController:!0};function r(e,r,o,n){}o.$inject=["$scope","$log"];function o(e,r){}return e}angular.module("cne").directive("loginPassword",loginPassword);function loginPassword(){r.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-password.directive.htm",replace:!0,scope:{password:"=",active:"="},link:r,controller:o,controllerAs:"vm",bindToController:!0};function r(e,r,o,n){}o.$inject=["$scope","$log"];function o(e,r){}return e}angular.module("cne").directive("loginUsername",loginUsername);function loginUsername(){r.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-username.directive.htm",replace:!0,scope:{username:"=",active:"="},link:r,controller:o,controllerAs:"vm",bindToController:!0};function r(e,r,o,n){}o.$inject=["$scope","$log"];function o(e,r){}return e}angular.module("cne").directive("loginValidation",loginValidation);function loginValidation(){r.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-validation.directive.htm",replace:!0,scope:{active:"="},link:r,controller:o,controllerAs:"vm",bindToController:!0};function r(e,r,o,n){}o.$inject=["$scope","$log"];function o(e,r){}return e}angular.module("cne").config(config);function config(e){e.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
