config.$inject=["$routeProvider"];var ahNuts=angular.module("cne",["ngRoute"]);angular.module("cne").config(config);function config(e){e.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/forgotPassword",{templateUrl:"views/login-forgotPasswordPage.htm",controller:"forgotPasswordController",controllerAs:"vm"}).when("/createLogin",{templateUrl:"views/login-createLoginPage.htm",controller:"createLoginController",controllerAs:"vm"}).when("/find",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/shop",{templateUrl:"views/shoppingPage.htm",controller:"shoppingController",controllerAs:"vm"}).when("/teamMember/:employeeId",{templateUrl:"views/teammemberDashboard.htm",controller:"teammemberDashboardController",controllerAs:"vm",resolve:{authentication:authentication}}).when("/myAccount/:userId",{templateUrl:"views/customerDashboard.htm",controller:"customerDashboardController",controllerAs:"vm",resolve:{authentication:authentication}}).otherwise({redirectTo:"/"})}function authentication(){console.log("authenticating")}angular.module("cne").controller("landingController",landingController),landingController.$inject=["$scope","$log"];function landingController(e,t){t.info("in the landing controller")}angular.module("cne").controller("locationsController",locationsController),locationsController.$inject=["$scope","$log"];function locationsController(e,t){t.info("in the locations controller")}angular.module("cne").controller("loginController",loginController),loginController.$inject=["$scope","$log"];function loginController(e,t){this.username="",this.password="",this.active={username:!1,password:!1},t.info("in the login controller")}angular.module("cne").controller("createLoginController",createLoginController),createLoginController.$inject=["$scope","$log"];function createLoginController(e,t){t.info("in the login-createLogin controller")}angular.module("cne").controller("forgotPasswordController",forgotPasswordController),forgotPasswordController.$inject=["$scope","$log"];function forgotPasswordController(e,t){t.info("in the login-forgot Password controller")}angular.module("cne").controller("teammemberDashboardController",teammemberDashboardController),teammemberDashboardController.$inject=["$scope","$log"];function teammemberDashboardController(e,t){this.sampleRecords=[{title:"",address:{},frequency:[{lable:"Monthly"},{lable:"Weekly"},{lable:"Every Other Week"}],years:[2017,2018],instances:[1,2,3]}],t.info("in the teammemberDashboard controller")}angular.module("cne").directive("cmeIterationsTable",cmeIterationsTable);function cmeIterationsTable(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/cmeIterationsTable.directive.htm",replace:!0,scope:{instances:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){this.autofill=!0}return e}angular.module("cne").directive("cmeProfileEditor",cmeProfileEditor);function cmeProfileEditor(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/cmeProfileEditor.directive.htm",replace:!0,scope:{record:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){var o=this;o.activeRecord={frequency:"",year:"",startDate:"",endDate:"",occurences:[]},o.validation={frequency:{attempted:!1,validated:!1},year:{attempted:!1,validated:!1},startDate:{attempted:!1,validated:!1},endDate:{attempted:!1,validated:!1}};o.validate=function(e,t){o.validation[e].attempted=!0,o.validation[e].validated=""!=t,o.validation.frequency&&o.validation.year&&o.validation.startDate&&o.validation.endDate?(console.log("everything filled in"),buildOccurancesList(o.validation.startDate,o.validation.endDate,o.validation.frequency)):console.log("still missing data")}}return e}angular.module("cne").directive("dateBookendPicker",dateBookendPicker);function dateBookendPicker(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/dateBookendPicker.directive.htm",replace:!0,scope:{year:"=",bookend:"=",bkndtype:"=",validatefn:"&"},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){var o=this;o.monthdays=[{text:"January",value:1,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"February",value:2,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]},{text:"March",value:3,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"April",value:4,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{text:"May",value:5,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"June",value:6,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{text:"July",value:7,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"August",value:8,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"September",value:9,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{text:"October",value:10,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]},{text:"November",value:11,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{text:"December",value:12,days:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}],o.activedate={month:"",day:"",wkday:""},o.validations={month:"",day:""};o.validate=function(e,t){var r=!1;isNaN(parseInt(t))?(o.monthdays.forEach(function(e){e.text==t&&(r=!0,o.activedate.month=e.value)}),r||(o.activedate.month="")):o.activedate[e]=parseInt(t),""!=o.year&&""!=o.activedate.month&&""!=o.activedate.day?(function(){var e=new Date(o.year,o.activedate.month-1,o.activedate.day).getDay();o.activedate.wkday=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e]}(),function(){var e=new Date(o.year,o.activedate.month-1,o.activedate.day);console.log("saving the bookend",o.bkndtype),o.bookend=e,o.validatefn({type:o.bkndtype,value:o.bookend})}()):console.log("still missing data")}}return e}angular.module("cne").directive("flavorMixerSizeSelector",flavorMixerSizeSelector);function flavorMixerSizeSelector(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/flavor-mixer-size-selector.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){}return e}angular.module("cne").directive("flavorMixer",flavorMixer);function flavorMixer(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/flavor-mixer.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){}return e}angular.module("cne").directive("loginPassword",loginPassword);function loginPassword(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-password.directive.htm",replace:!0,scope:{password:"=",active:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){}return e}angular.module("cne").directive("loginUsername",loginUsername);function loginUsername(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-username.directive.htm",replace:!0,scope:{username:"=",active:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){}return e}angular.module("cne").directive("loginValidation",loginValidation);function loginValidation(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/login-validation.directive.htm",replace:!0,scope:{active:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}o.$inject=["$scope","$log"];function o(e,t){}return e}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
